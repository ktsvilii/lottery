/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  LotteryTest,
  LotteryTestInterface,
} from "../../contracts/LotteryTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subscriptionId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "coordinator",
        type: "address",
      },
    ],
    name: "OnlyOwnerOrCoordinator",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vrfCoordinator",
        type: "address",
      },
    ],
    name: "CoordinatorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Distribute",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundJackpot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "JackpotWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "OperationsBalanceWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "OwnerBalanceWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[5]",
        name: "combination",
        type: "uint256[5]",
      },
    ],
    name: "PlayerCombinationSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "RandomNumberGenerated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "RandomWordsRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketNumber",
        type: "uint256",
      },
    ],
    name: "TicketPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[5]",
        name: "combination",
        type: "uint256[5]",
      },
    ],
    name: "WinningCombinationGenerated",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "CALLBACK_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NUMBER_OF_WORDS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NUMBER_RANGE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REQUEST_CONFIRMATIONS",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TICKET_PRICE_WEI",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allTicketIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assignTestTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "buyBatchTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "purchaseTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256[5]",
            name: "playerCombination",
            type: "uint256[5]",
          },
          {
            internalType: "uint256[5]",
            name: "winningCombination",
            type: "uint256[5]",
          },
          {
            internalType: "uint8",
            name: "matchingNumbers",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "potentialReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "actualReward",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRewardClaimed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "playerCombinationSubmitted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "winningCombinationGenerated",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "randomNumberRequested",
            type: "bool",
          },
        ],
        internalType: "struct LotteryTest.LotteryTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "buyTicket",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "purchaseTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256[5]",
            name: "playerCombination",
            type: "uint256[5]",
          },
          {
            internalType: "uint256[5]",
            name: "winningCombination",
            type: "uint256[5]",
          },
          {
            internalType: "uint8",
            name: "matchingNumbers",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "potentialReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "actualReward",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRewardClaimed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "playerCombinationSubmitted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "winningCombinationGenerated",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "randomNumberRequested",
            type: "bool",
          },
        ],
        internalType: "struct LotteryTest.LotteryTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "count",
        type: "uint8",
      },
    ],
    name: "buyTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "purchaseTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256[5]",
            name: "playerCombination",
            type: "uint256[5]",
          },
          {
            internalType: "uint256[5]",
            name: "winningCombination",
            type: "uint256[5]",
          },
          {
            internalType: "uint8",
            name: "matchingNumbers",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "potentialReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "actualReward",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRewardClaimed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "playerCombinationSubmitted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "winningCombinationGenerated",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "randomNumberRequested",
            type: "bool",
          },
        ],
        internalType: "struct LotteryTest.LotteryTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fundJackpot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "purchaseTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256[5]",
            name: "playerCombination",
            type: "uint256[5]",
          },
          {
            internalType: "uint256[5]",
            name: "winningCombination",
            type: "uint256[5]",
          },
          {
            internalType: "uint8",
            name: "matchingNumbers",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "potentialReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "actualReward",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRewardClaimed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "playerCombinationSubmitted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "winningCombinationGenerated",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "randomNumberRequested",
            type: "bool",
          },
        ],
        internalType: "struct LotteryTest.LotteryTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getJackpot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOperationsBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwnerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayerTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "purchaseTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256[5]",
            name: "playerCombination",
            type: "uint256[5]",
          },
          {
            internalType: "uint256[5]",
            name: "winningCombination",
            type: "uint256[5]",
          },
          {
            internalType: "uint8",
            name: "matchingNumbers",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "potentialReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "actualReward",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRewardClaimed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "playerCombinationSubmitted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "winningCombinationGenerated",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "randomNumberRequested",
            type: "bool",
          },
        ],
        internalType: "struct LotteryTest.LotteryTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTestTicket",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "purchaseTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256[5]",
            name: "playerCombination",
            type: "uint256[5]",
          },
          {
            internalType: "uint256[5]",
            name: "winningCombination",
            type: "uint256[5]",
          },
          {
            internalType: "uint8",
            name: "matchingNumbers",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "potentialReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "actualReward",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRewardClaimed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "playerCombinationSubmitted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "winningCombinationGenerated",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "randomNumberRequested",
            type: "bool",
          },
        ],
        internalType: "struct LotteryTest.LotteryTicket",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "getTicketById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "purchaseTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256[5]",
            name: "playerCombination",
            type: "uint256[5]",
          },
          {
            internalType: "uint256[5]",
            name: "winningCombination",
            type: "uint256[5]",
          },
          {
            internalType: "uint8",
            name: "matchingNumbers",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "potentialReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "actualReward",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRewardClaimed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "playerCombinationSubmitted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "winningCombinationGenerated",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "randomNumberRequested",
            type: "bool",
          },
        ],
        internalType: "struct LotteryTest.LotteryTicket",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWinningCombination",
    outputs: [
      {
        internalType: "uint256[5]",
        name: "",
        type: "uint256[5]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jackpot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTicketId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "playerTicketIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestIdToTicketId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_vrfCoordinator",
    outputs: [
      {
        internalType: "contract IVRFCoordinatorV2Plus",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
    ],
    name: "setCoordinator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
      {
        internalType: "uint256[5]",
        name: "playerCombination",
        type: "uint256[5]",
      },
    ],
    name: "submitCombination",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "testDistribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testTicket",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "purchaseTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "matchingNumbers",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "potentialReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualReward",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRewardClaimed",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "playerCombinationSubmitted",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "winningCombinationGenerated",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "randomNumberRequested",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "matchingNumbers",
        type: "uint8",
      },
    ],
    name: "test_calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "playerCombination",
        type: "uint256[5]",
      },
      {
        internalType: "uint256[5]",
        name: "winningCombination",
        type: "uint256[5]",
      },
    ],
    name: "test_checkWinningCombination",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "test_fulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "randomWord",
        type: "uint256",
      },
    ],
    name: "test_generateWinningCombination",
    outputs: [
      {
        internalType: "uint256[5]",
        name: "",
        type: "uint256[5]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "test_requestRandomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "test_sendReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
      {
        internalType: "uint256[5]",
        name: "combination",
        type: "uint256[5]",
      },
    ],
    name: "test_setWinningCombination",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tickets",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "purchaseTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "matchingNumbers",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "potentialReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualReward",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRewardClaimed",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "playerCombinationSubmitted",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "winningCombinationGenerated",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "randomNumberRequested",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawJackpot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawOperationsBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawOwnerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "";

type LotteryTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LotteryTest__factory extends ContractFactory {
  constructor(...args: LotteryTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _vrfCoordinator: AddressLike,
    _subscriptionId: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _subscriptionId,
      overrides || {}
    );
  }
  override deploy(
    _vrfCoordinator: AddressLike,
    _subscriptionId: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _vrfCoordinator,
      _subscriptionId,
      overrides || {}
    ) as Promise<
      LotteryTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LotteryTest__factory {
    return super.connect(runner) as LotteryTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryTestInterface {
    return new Interface(_abi) as LotteryTestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LotteryTest {
    return new Contract(address, _abi, runner) as unknown as LotteryTest;
  }
}
